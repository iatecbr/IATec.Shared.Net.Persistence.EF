# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
trigger:
  branches:
    include:
      - main

pool:
  name: IATec-Builds-Agents

variables:
  - group: nuget-credentials
  - name: buildConfiguration
    value: 'Release'

steps:
  - task: replacetokens@6
    displayName: 'Replace variables in setup-nuget.sh'
    inputs:
      targetFiles: 'setup-nuget.sh'
      encoding: 'auto'
      writeBOM: true
      actionOnMissing: 'warn'
      keepToken: false
      tokenPrefix: '#{'
      tokenSuffix: '}#'

  - task: CmdLine@2
    displayName: 'Run setup-nuget.sh with Git Bash'
    inputs:
      script: |
        "C:\Program Files\Git\bin\bash.exe" -c "chmod +x ./setup-nuget.sh && ./setup-nuget.sh"

  - task: PowerShell@2
    displayName: 'Get project version'
    inputs:
      targetType: 'inline'
      script: |
        $version = [xml](Get-Content  src/IATec.Shared.Persistence.EF.csproj)
        $packageVersion = $version.Project.PropertyGroup.Version
        Write-Host "##vso[task.setvariable variable=packageVersion]$packageVersion"

  - task: NuGetAuthenticate@0
    displayName: 'NuGet authenticate'

  - task: CmdLine@2
    displayName: 'Rename NuGet.Config.Pipeline To NuGet.Config'
    inputs:
      script: 'rename $(Build.SourcesDirectory)\NuGet.Config.Pipeline NuGet.Config'

  - task: replacetokens@6
    displayName: 'Replace variables in NuGet.Config'
    inputs:
      targetFiles: '**/NuGet.Config'
      encoding: 'auto'
      writeBOM: true
      actionOnMissing: 'warn'
      keepToken: false
      tokenPrefix: '#{'
      tokenSuffix: '}#'

  - script: dotnet build --configuration $(buildConfiguration)
    displayName: 'Dotnet build'

  - task: NuGetCommand@2
    inputs:
      displayName: 'Pack nuGet package'
      command: pack
      packagesToPack: '**/IATec.Shared.Persistence.EF.csproj'
      packDestination: '$(Build.ArtifactStagingDirectory)'
      versioningScheme: byEnvVar
      versionEnvVar: packageVersion

  - task: NuGetCommand@2
    displayName: 'NuGet push'
    inputs:
      command: push
      publishVstsFeed: 'IATec.Community'
      allowPackageConflicts: true